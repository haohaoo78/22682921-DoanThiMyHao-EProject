name: CI/CD EProject Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # --- B1. Checkout code ---
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- B2. Build Docker images ---
      - name: Build Docker images
        run: |
          docker build -t auth-service ./auth
          docker build -t product-service ./product
          docker build -t order-service ./order

      # --- B3. Create Docker network ---
      - name: Create Docker network
        run: docker network create eproject-net || true

      # --- B4. Start MongoDB ---
      - name: Start MongoDB
        run: |
          docker run -d --name mongo --network eproject-net mongo:6
          sleep 10

      # --- B5. Start RabbitMQ ---
      - name: Start RabbitMQ
        run: |
          docker run -d --name rabbitmq \
            --network eproject-net \
            -e RABBITMQ_DEFAULT_USER=haohaao78 \
            -e RABBITMQ_DEFAULT_PASS=Shatou5114 \
            rabbitmq:3-management
          sleep 10

      # --- B6. Start Auth service ---
      - name: Start Auth service
        run: |
          docker run -d --name auth \
            --network eproject-net \
            --env-file ./auth/.env \
            auth-service
          for i in {1..20}; do
            if docker exec auth curl -s http://localhost:4001/health; then break; else sleep 3; fi
          done
          echo "Auth service is ready"

      # --- B7. Start Product service ---
      - name: Start Product service
        run: |
          docker run -d --name product \
            --network eproject-net \
            --env-file ./product/.env \
            product-service
          for i in {1..20}; do
            if docker exec product curl -s http://localhost:4002/health; then break; else sleep 3; fi
          done
          echo "Product service is ready"

      # --- B8. Start Order service ---
      - name: Start Order service
        run: |
          docker run -d --name order \
            --network eproject-net \
            --env-file ./order/.env \
            order-service
          for i in {1..20}; do
            if docker exec order curl -s http://localhost:4003/health; then break; else sleep 3; fi
          done
          echo "Order service is ready"

      # --- B9. Run all tests ---
      - name: Run tests
        run: |
          docker exec auth npm test
          docker exec product npm test
          docker exec order npm test

      # --- B10. Cleanup ---
      - name: Cleanup containers and network
        if: always()
        run: |
          docker stop auth product order mongo rabbitmq || true
          docker rm auth product order mongo rabbitmq || true
          docker network rm eproject-net || true
