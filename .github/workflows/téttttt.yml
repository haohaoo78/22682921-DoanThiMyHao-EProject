name: CI/CD EProject Microservices (Docker + Test th·∫≠t)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ----------------------------------------------------------
  # üß™ B1. TEST T·ª™NG SERVICE TH·∫¨T
  # ----------------------------------------------------------
  test_services:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Setup Docker network ---
      - name: Create Docker network
        run: docker network create eproject-net || true

      # --- Build all images ---
      - name: Build Docker images
        run: |
          docker build -t eproject-auth ./auth
          docker build -t eproject-product ./product
          docker build -t eproject-order ./order
          docker build -t eproject-gateway ./api-gateway
          docker pull mongo:6
          docker pull rabbitmq:3-management

      # --- Run MongoDB & RabbitMQ ---
      - name: Start MongoDB & RabbitMQ
        run: |
          docker run -d --name mongo --network eproject-net mongo:6
          docker run -d --name rabbitmq --network eproject-net rabbitmq:3-management
          sleep 10

      # --- Run Auth service ---
      - name: Run Auth container
        run: |
          docker run -d --name auth --network eproject-net \
            -e MONGODB_AUTH_URI=mongodb://mongo:27017/auth_test \
            -e JWT_SECRET=${{ secrets.JWT_SECRET || 'dummysecret' }} \
            -p 3000:3000 \
            eproject-auth
          sleep 15

      # --- Run Auth tests ---
      - name: Test Auth
        run: docker exec auth npm test --if-present
        env:
          NODE_ENV: test

      # --- Run Product service (ph·ª• thu·ªôc Auth) ---
      - name: Run Product container
        run: |
          docker run -d --name product --network eproject-net \
            -e MONGODB_PRODUCT_URI=mongodb://mongo:27017/product_test \
            -e JWT_SECRET=${{ secrets.JWT_SECRET || 'dummysecret' }} \
            -e AUTH_SERVICE_URL=http://auth:3000 \
            -e RABBITMQ_URL=amqp://rabbitmq:5672 \
            -p 3001:3001 \
            eproject-product
          sleep 15

      # --- Run Product tests ---
      - name: Test Product
        run: docker exec product npm test --if-present
        env:
          NODE_ENV: test

      # --- Run Order service ---
      - name: Run Order container
        run: |
          docker run -d --name order --network eproject-net \
            -e MONGODB_ORDER_URI=mongodb://mongo:27017/order_test \
            -e PRODUCT_SERVICE_URL=http://product:3001 \
            -p 3002:3002 \
            eproject-order
          sleep 10

      # --- Run Gateway service ---
      - name: Run Gateway container
        run: |
          docker run -d --name gateway --network eproject-net \
            -e AUTH_SERVICE_URL=http://auth:3000 \
            -e PRODUCT_SERVICE_URL=http://product:3001 \
            -e ORDER_SERVICE_URL=http://order:3002 \
            -p 3003:3003 \
            eproject-gateway
          sleep 10

  # ----------------------------------------------------------
  # üê≥ B2. BUILD + PUSH IMAGE SAU KHI TEST PASS
  # ----------------------------------------------------------
  build_push:
    runs-on: ubuntu-latest
    needs: test_services
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push all images
        run: |
          USER=${{ secrets.DOCKER_USERNAME }}
          docker tag eproject-auth $USER/eproject-auth:latest
          docker tag eproject-product $USER/eproject-product:latest
          docker tag eproject-order $USER/eproject-order:latest
          docker tag eproject-gateway $USER/eproject-gateway:latest

          docker push $USER/eproject-auth:latest
          docker push $USER/eproject-product:latest
          docker push $USER/eproject-order:latest
          docker push $USER/eproject-gateway:latest

  # ----------------------------------------------------------
  # üßπ B3. CLEANUP
  # ----------------------------------------------------------
  cleanup:
    runs-on: ubuntu-latest
    needs: build_push
    if: always()
    steps:
      - name: Cleanup containers and network
        run: |
          docker stop auth product order gateway mongo rabbitmq || true
          docker rm auth product order gateway mongo rabbitmq || true
          docker network rm eproject-net || true
