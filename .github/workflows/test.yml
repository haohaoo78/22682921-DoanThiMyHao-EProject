name: CI/CD EProject Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=10

    steps:
      # --- B1. Checkout code ---
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- B2. Set up Node.js ---
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # --- B3. Create .env files ---
      - name: Create .env files
        run: |
          mkdir -p auth product

          # Auth service
          echo "MONGODB_AUTH_URI=mongodb://localhost:27017/auth_db" > auth/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> auth/.env
          echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> auth/.env
          echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> auth/.env
          echo "PORT=3000" >> auth/.env

          # Product service
          echo "MONGODB_PRODUCT_URI=mongodb://localhost:27017/product_db" > product/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> product/.env
          echo "AUTH_SERVICE_URL=http://localhost:3000" >> product/.env
          echo "PORT=4000" >> product/.env

      # --- B4. Install dependencies ---
      - name: Install dependencies
        run: |
          cd auth && npm install && cd ..
          cd product && npm install && cd ..

      # --- B5. Wait for MongoDB to be ready ---
      - name: Wait for MongoDB
        run: |
          for i in {1..20}; do
            if mongosh --eval "db.adminCommand('ping')" >/dev/null 2>&1; then break; else sleep 3; fi
          done

      # --- B6. Run Auth tests ---
      - name: Run Auth tests
        run: |
          cd auth
          npm test

      # --- B7. Start Auth server for Product tests ---
      - name: Start Auth server
        run: |
          cd auth
          npm start &
          sleep 10

      # --- B8. Run Product tests ---
      - name: Run Product tests
        run: |
          cd product
          npm test
