name: CI/CD EProject Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASS }}
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # --- Install dependencies ---
      - name: Install Auth dependencies
        run: |
          cd auth
          npm install

      - name: Install Product dependencies
        run: |
          cd product
          npm install

      - name: Install Order dependencies
        run: |
          cd order
          npm install

      # --- Test Auth service ---
      - name: Test Auth service
        run: |
          cd auth
          npx mocha --timeout 20000 src/test/**/*.test.js --exit --parallel=false

      # --- Test Product service ---
      - name: Test Product service
        run: |
          cd product
          npx mocha --timeout 20000 src/test/**/*.test.js --exit --parallel=false

      # --- Test Order service ---
      - name: Test Order service
        run: |
          cd order
          npx mocha --timeout 20000 src/test/**/*.test.js --exit --parallel=false
