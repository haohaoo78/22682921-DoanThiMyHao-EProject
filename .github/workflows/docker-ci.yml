name: CI/CD EProject Microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASS }}
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # --- Install dependencies ---
      - name: Install dependencies
        run: |
          cd auth && npm install
          cd ../product && npm install
          cd ../order && npm install

      # --- Test Auth service ---
      - name: Test Auth service (Create test user)
        run: |
          cd auth
          npx mocha --timeout 20000 src/test/**/*.test.js --exit --parallel=false

          # ✅ Tạo user test để dùng ở Product
          node -e "
            const mongoose = require('mongoose');
            const User = require('./src/models/user');
            mongoose.connect('mongodb://localhost:27017/auth_db').then(async () => {
              await User.create({ username: 'testuser', email: 'test@example.com', password: 'hashedpassword' });
              console.log('✅ Test user created');
              process.exit(0);
            });
          "
        env:
          MONGODB_AUTH_URI: "mongodb://localhost:27017/auth_db"
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          RABBITMQ_HOST: "localhost"
          RABBITMQ_PORT: "5672"
          RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_PASS: ${{ secrets.RABBITMQ_PASS }}

      # --- Test Product service ---
      - name: Test Product service
        run: |
          cd product
          npx mocha --timeout 20000 src/test/**/*.test.js --exit --parallel=false
        env:
          MONGODB_PRODUCT_URI: "mongodb://localhost:27017/product_db"
          AUTH_SERVICE_URL: "http://localhost:4001"
          RABBITMQ_HOST: "localhost"
          RABBITMQ_PORT: "5672"
          RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_PASS: ${{ secrets.RABBITMQ_PASS }}
